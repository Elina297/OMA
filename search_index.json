[["index.html", "Microbiome Analysis Preface", " Microbiome Analysis Authors: Leo Lahti [aut], Sudershan Shetty [aut], Felix GM Ernst [aut, cre] Version: 0.98.0003 Modified: 2020-12-02 Compiled: 2020-12-03 Environment: R version 4.0.3 (2020-10-10), Bioconductor 3.12 License: CC BY-NC-SA 3.0 US Copyright: Source: https://github.com/microbiome/MiaBook Preface This website is a book on microbiome analysis in the Bioconductor universe and is showing common principles and workflows of performing microbiome analysis. The book was borne out of necessity, while updating tools for microbiome analysis to work with common classes of the Bioconductor project handling count data of various sorts. It is heavily influenced by similar resources, such as the Orchestrating Single-Cell Analysis with Bioconductor book, phyloseq tutorials and microbiome tutorials. We focus on microbiome analysis tools, new, updated and established methods. In the Introduction section, we show how to work with the key data infrastructure TreeSummarizedExperiment and related classes, how this framework relates to other infrastructure and how to load microbiome analysis data to work with in the context of this framework. The second section, Focus Topics, is all about the steps for analyzing microbiome data, beginning with the most common steps and progressing to more specialized methods in subsequent sections. The third section, Appendix, contains the rest of things we didnâ€™t find another place for, yet. "],["data-introduction.html", "Chapter 1 Data Infrastructure 1.1 Installation 1.2 Background 1.3 Loading experimental microbiome data 1.4 Metadata 1.5 Microbiome and tree data specific aspects 1.6 Data conversion 1.7 Conclusion Session Info", " Chapter 1 Data Infrastructure .rebook-collapse { background-color: #eee; color: #444; cursor: pointer; padding: 18px; width: 100%; border: none; text-align: left; outline: none; font-size: 15px; } .rebook-content { padding: 0 18px; display: none; overflow: hidden; background-color: #f1f1f1; } The SummarizedExperiment (SE) is a widely used class for analyzing data obtained by common sequencing techniques. SE is common structure for several Bioconductor packages that are used for analyzing RNAseq, ChIp-Seq data. SE class is also used in R packages for analyzing microarrays, flow cytometry, proteomics, single-cell sequencing data and many more. The single-cell analysis is facilitated by SingelCellExperiment class (SCE), which allows the user to store results of dimensionality reduction and alternative experiments. Alternative experiments (altExps) can be differently processed data within the analysis workflows. Recently, TreeSummarizedExperiment (TSE), MicrobiomeExperiment were developed to extend the SE and SCE class for incorporating hierarchical information (including phylogenetic tree) and reference sequences. The mia package implements tools using these classes for analysis of microbiome sequencing data. 1.1 Installation Install the development version from GitHub using remotes R package. # install remotes #install.packages(&quot;remotes&quot;) BiocManager::install(&quot;FelixErnst/mia&quot;) 1.1.1 Packages mia : Microbiome analysis tools miaViz : Microbiome analysis specific visualization See also: microbiome 1.2 Background The phyloseq package and class was around before the SummarizedExperiment and the derived TreeSummarizedExperiment class. To make the transition easy here is short description how phyloseq and *Experiment classes relate to each other. assays : This slot is similar to otu_table in phyloseq. In a SummarizedExperiment object multiple assays, raw counts, transformed counts can be stored. See also MultiAssayExperiment for storing data from multiple experiments such as RNASeq, Proteomics, etc. rowData : This slot is similar to tax_table in phyloseq to store taxonomic information. colData : This slot is similar to sample_data in phyloseq to store information related to samples. rowTree : This slot is similar to phy_tree in phyloseq to store phylogenetic tree. In this book, you will come across terms like FeatureIDs and SampleIDs. FeatureIDs : These are basically OTU/ASV ids which are row names in assays and rowData. SampleIDs : As the name suggests, these are sample ids which are column names in assays and row names in colData. FeatureIDs and SampleIDs are used but the technical terms rownames and colnames are encouraged to be used, since they relate to actual objects we work with. 1.3 Loading experimental microbiome data 1.4 Metadata 1.5 Microbiome and tree data specific aspects library(mia) data(&quot;GlobalPatterns&quot;) se &lt;- GlobalPatterns se ## class: TreeSummarizedExperiment ## dim: 19216 26 ## metadata(0): ## assays(1): counts ## rownames(19216): 549322 522457 ... 200359 271582 ## rowData names(7): Kingdom Phylum ... Genus Species ## colnames(26): CL3 CC1 ... Even2 Even3 ## colData names(7): X.SampleID Primer ... SampleType Description ## reducedDimNames(0): ## altExpNames(0): ## rowLinks: a LinkDataFrame (19216 rows) ## rowTree: a phylo (19216 leaves) ## colLinks: NULL ## colTree: NULL 1.5.1 Assays The assays slots contains the experimental data as count matrices. Multiple matrices can be stored the result of assays is actually a list of matrices. assays(se) ## List of length 1 ## names(1): counts Individual assays can be accessed via assay assay(se, &quot;counts&quot;)[1:5,1:7] ## CL3 CC1 SV1 M31Fcsw M11Fcsw M31Plmr M11Plmr ## 549322 0 0 0 0 0 0 0 ## 522457 0 0 0 0 0 0 0 ## 951 0 0 0 0 0 0 1 ## 244423 0 0 0 0 0 0 0 ## 586076 0 0 0 0 0 0 0 To illustrate the use of multiple assays, the relative abundance data can be calcualted and stored along the original count data using relAbundanceCounts. se &lt;- relAbundanceCounts(se) assays(se) ## List of length 2 ## names(2): counts relabundance Now there are two assays available in the se object, counts and relabundance. assay(se, &quot;relabundance&quot;)[1:5,1:7] ## CL3 CC1 SV1 M31Fcsw M11Fcsw M31Plmr M11Plmr ## 549322 0 0 0 0 0 0 0.000e+00 ## 522457 0 0 0 0 0 0 0.000e+00 ## 951 0 0 0 0 0 0 2.305e-06 ## 244423 0 0 0 0 0 0 0.000e+00 ## 586076 0 0 0 0 0 0 0.000e+00 1.5.2 colData colData contains data on the samples. colData(se) ## DataFrame with 26 rows and 7 columns ## X.SampleID Primer Final_Barcode Barcode_truncated_plus_T ## &lt;factor&gt; &lt;factor&gt; &lt;factor&gt; &lt;factor&gt; ## CL3 CL3 ILBC_01 AACGCA TGCGTT ## CC1 CC1 ILBC_02 AACTCG CGAGTT ## SV1 SV1 ILBC_03 AACTGT ACAGTT ## M31Fcsw M31Fcsw ILBC_04 AAGAGA TCTCTT ## M11Fcsw M11Fcsw ILBC_05 AAGCTG CAGCTT ## ... ... ... ... ... ## TS28 TS28 ILBC_25 ACCAGA TCTGGT ## TS29 TS29 ILBC_26 ACCAGC GCTGGT ## Even1 Even1 ILBC_27 ACCGCA TGCGGT ## Even2 Even2 ILBC_28 ACCTCG CGAGGT ## Even3 Even3 ILBC_29 ACCTGT ACAGGT ## Barcode_full_length SampleType ## &lt;factor&gt; &lt;factor&gt; ## CL3 CTAGCGTGCGT Soil ## CC1 CATCGACGAGT Soil ## SV1 GTACGCACAGT Soil ## M31Fcsw TCGACATCTCT Feces ## M11Fcsw CGACTGCAGCT Feces ## ... ... ... ## TS28 GCATCGTCTGG Feces ## TS29 CTAGTCGCTGG Feces ## Even1 TGACTCTGCGG Mock ## Even2 TCTGATCGAGG Mock ## Even3 AGAGAGACAGG Mock ## Description ## &lt;factor&gt; ## CL3 Calhoun South Carolina Pine soil, pH 4.9 ## CC1 Cedar Creek Minnesota, grassland, pH 6.1 ## SV1 Sevilleta new Mexico, desert scrub, pH 8.3 ## M31Fcsw M3, Day 1, fecal swab, whole body study ## M11Fcsw M1, Day 1, fecal swab, whole body study ## ... ... ## TS28 Twin #1 ## TS29 Twin #2 ## Even1 Even1 ## Even2 Even2 ## Even3 Even3 1.5.3 rowData rowData contains data on the features of the samples analyzed. Of particular interest for the microbiome field this is used to store taxonomic information. rowData(se) ## DataFrame with 19216 rows and 7 columns ## Kingdom Phylum Class Order Family ## &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; ## 549322 Archaea Crenarchaeota Thermoprotei NA NA ## 522457 Archaea Crenarchaeota Thermoprotei NA NA ## 951 Archaea Crenarchaeota Thermoprotei Sulfolobales Sulfolobaceae ## 244423 Archaea Crenarchaeota Sd-NA NA NA ## 586076 Archaea Crenarchaeota Sd-NA NA NA ## ... ... ... ... ... ... ## 278222 Bacteria SR1 NA NA NA ## 463590 Bacteria SR1 NA NA NA ## 535321 Bacteria SR1 NA NA NA ## 200359 Bacteria SR1 NA NA NA ## 271582 Bacteria SR1 NA NA NA ## Genus Species ## &lt;character&gt; &lt;character&gt; ## 549322 NA NA ## 522457 NA NA ## 951 Sulfolobus Sulfolobusacidocalda.. ## 244423 NA NA ## 586076 NA NA ## ... ... ... ## 278222 NA NA ## 463590 NA NA ## 535321 NA NA ## 200359 NA NA ## 271582 NA NA 1.5.4 rowTree Phylogenetic trees also play an important role for the microbiome field. The TreeSummarizedExperiment class is able to keep track of feature and node relations via two functions, rowTree and rowLinks. A tree can be accessed via rowTree as phylo object. rowTree(se) ## ## Phylogenetic tree with 19216 tips and 19215 internal nodes. ## ## Tip labels: ## 549322, 522457, 951, 244423, 586076, 246140, ... ## Node labels: ## , 0.858.4, 1.000.154, 0.764.3, 0.995.2, 1.000.2, ... ## ## Rooted; includes branch lengths. The links to the individual features are available through rowLinks. rowLinks(se) ## LinkDataFrame with 19216 rows and 4 columns ## nodeLab nodeLab_alias nodeNum isLeaf ## &lt;character&gt; &lt;character&gt; &lt;integer&gt; &lt;logical&gt; ## 549322 549322 alias_1 1 TRUE ## 522457 522457 alias_2 2 TRUE ## 951 951 alias_3 3 TRUE ## 244423 244423 alias_4 4 TRUE ## 586076 586076 alias_5 5 TRUE ## ... ... ... ... ... ## 278222 278222 alias_19212 19212 TRUE ## 463590 463590 alias_19213 19213 TRUE ## 535321 535321 alias_19214 19214 TRUE ## 200359 200359 alias_19215 19215 TRUE ## 271582 271582 alias_19216 19216 TRUE Please note that there can be a 1:1 relationship between tree nodes and features, but this is not a must have. This means there can be features, which are not linked to nodes, and nodes, which are not linked to features. To change the links in an existing object, the changeTree function is available. 1.6 Data conversion Sometimes custom solutions are need for analyzing the data. mia contains a few functions to help in these situations. 1.6.1 Tidy data For several custom analysis and visualization packages such as those from the tidyverse the SE data can be converted to long data.frame format with meltAssay. library(mia) molten_se &lt;- meltAssay(se, add_row_data = TRUE, add_col_data = TRUE, abund_values = &quot;relabundance&quot;) molten_se ## # A tibble: 499,616 x 17 ## FeatureID SampleID relabundance Kingdom Phylum Class Order Family Genus ## &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 549322 CL3 0 Archaea Crenaâ€¦ Therâ€¦ &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 2 549322 CC1 0 Archaea Crenaâ€¦ Therâ€¦ &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 3 549322 SV1 0 Archaea Crenaâ€¦ Therâ€¦ &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 4 549322 M31Fcsw 0 Archaea Crenaâ€¦ Therâ€¦ &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 5 549322 M11Fcsw 0 Archaea Crenaâ€¦ Therâ€¦ &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 6 549322 M31Plmr 0 Archaea Crenaâ€¦ Therâ€¦ &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 7 549322 M11Plmr 0 Archaea Crenaâ€¦ Therâ€¦ &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 8 549322 F21Plmr 0 Archaea Crenaâ€¦ Therâ€¦ &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 9 549322 M31Tong 0 Archaea Crenaâ€¦ Therâ€¦ &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 10 549322 M11Tong 0 Archaea Crenaâ€¦ Therâ€¦ &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## # â€¦ with 499,606 more rows, and 8 more variables: Species &lt;chr&gt;, ## # X.SampleID &lt;fct&gt;, Primer &lt;fct&gt;, Final_Barcode &lt;fct&gt;, ## # Barcode_truncated_plus_T &lt;fct&gt;, Barcode_full_length &lt;fct&gt;, ## # SampleType &lt;fct&gt;, Description &lt;fct&gt; 1.7 Conclusion Some wrapping upâ€¦ Session Info View session info R version 4.0.3 (2020-10-10) Platform: x86_64-pc-linux-gnu (64-bit) Running under: Ubuntu 20.04 LTS Matrix products: default BLAS/LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.8.so locale: [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=C [7] LC_PAPER=en_US.UTF-8 LC_NAME=C [9] LC_ADDRESS=C LC_TELEPHONE=C [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C attached base packages: [1] parallel stats4 stats graphics grDevices utils datasets [8] methods base other attached packages: [1] mia_0.0.0.9009 MicrobiomeExperiment_0.99.0.9014 [3] Biostrings_2.58.0 XVector_0.30.0 [5] TreeSummarizedExperiment_1.6.0 SingleCellExperiment_1.12.0 [7] SummarizedExperiment_1.20.0 Biobase_2.50.0 [9] GenomicRanges_1.42.0 GenomeInfoDb_1.26.1 [11] IRanges_2.24.0 S4Vectors_0.28.0 [13] BiocGenerics_0.36.0 MatrixGenerics_1.2.0 [15] matrixStats_0.57.0 BiocStyle_2.18.1 [17] rebook_1.0.0 BiocManager_1.30.10 loaded via a namespace (and not attached): [1] Rcpp_1.0.5 ape_5.4-1 [3] lattice_0.20-41 tidyr_1.1.2 [5] ps_1.4.0 utf8_1.1.4 [7] assertthat_0.2.1 digest_0.6.27 [9] R6_2.5.0 evaluate_0.14 [11] pillar_1.4.7 sparseMatrixStats_1.2.0 [13] zlibbioc_1.36.0 rlang_0.4.9 [15] callr_3.5.1 Matrix_1.2-18 [17] rmarkdown_2.5 BiocParallel_1.24.1 [19] stringr_1.4.0 RCurl_1.98-1.2 [21] beachmat_2.6.2 DelayedArray_0.16.0 [23] compiler_4.0.3 xfun_0.19 [25] pkgconfig_2.0.3 CodeDepends_0.6.5 [27] htmltools_0.5.0 tidyselect_1.1.0 [29] tibble_3.0.4 GenomeInfoDbData_1.2.4 [31] bookdown_0.21 codetools_0.2-18 [33] XML_3.99-0.5 fansi_0.4.1 [35] crayon_1.3.4 dplyr_1.0.2 [37] bitops_1.0-6 grid_4.0.3 [39] nlme_3.1-150 lifecycle_0.2.0 [41] magrittr_2.0.1 graph_1.68.0 [43] cli_2.2.0 stringi_1.5.3 [45] scuttle_1.0.3 DelayedMatrixStats_1.12.1 [47] ellipsis_0.3.1 generics_0.1.0 [49] vctrs_0.3.5 tools_4.0.3 [51] glue_1.4.2 purrr_0.3.4 [53] processx_3.4.5 yaml_2.2.1 [55] knitr_1.30 "],["overview.html", "Chapter 2 Overview 2.1 Introduction 2.2 Microbiome experiment types 2.3 Processing steps 2.4 Quick Start Session Info", " Chapter 2 Overview .rebook-collapse { background-color: #eee; color: #444; cursor: pointer; padding: 18px; width: 100%; border: none; text-align: left; outline: none; font-size: 15px; } .rebook-content { padding: 0 18px; display: none; overflow: hidden; background-color: #f1f1f1; } 2.1 Introduction 2.2 Microbiome experiment types 2.3 Processing steps 2.4 Quick Start Session Info View session info R version 4.0.3 (2020-10-10) Platform: x86_64-pc-linux-gnu (64-bit) Running under: Ubuntu 20.04 LTS Matrix products: default BLAS/LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.8.so locale: [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=C [7] LC_PAPER=en_US.UTF-8 LC_NAME=C [9] LC_ADDRESS=C LC_TELEPHONE=C [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C attached base packages: [1] stats graphics grDevices utils datasets methods base other attached packages: [1] BiocStyle_2.18.1 rebook_1.0.0 BiocManager_1.30.10 loaded via a namespace (and not attached): [1] bookdown_0.21 codetools_0.2-18 XML_3.99-0.5 [4] ps_1.4.0 digest_0.6.27 stats4_4.0.3 [7] magrittr_2.0.1 evaluate_0.14 graph_1.68.0 [10] rlang_0.4.9 stringi_1.5.3 callr_3.5.1 [13] rmarkdown_2.5 tools_4.0.3 stringr_1.4.0 [16] processx_3.4.5 parallel_4.0.3 xfun_0.19 [19] yaml_2.2.1 compiler_4.0.3 BiocGenerics_0.36.0 [22] htmltools_0.5.0 CodeDepends_0.6.5 knitr_1.30 "],["taxonomic-information.html", "Chapter 3 Taxonomic information 3.1 Data agglomeration 3.2 Get unique 3.3 Pick specific Session Info", " Chapter 3 Taxonomic information .rebook-collapse { background-color: #eee; color: #444; cursor: pointer; padding: 18px; width: 100%; border: none; text-align: left; outline: none; font-size: 15px; } .rebook-content { padding: 0 18px; display: none; overflow: hidden; background-color: #f1f1f1; } library(mia) data(&quot;GlobalPatterns&quot;) se &lt;- GlobalPatterns 3.1 Data agglomeration Agglomerate at a specific taxonomic rank. If multiple assays (counts and relabundance) exists, both will be agglomerated. altExp(se, &quot;Family&quot;) &lt;- agglomerateByRank(se, rank = &quot;Family&quot;, agglomerateTree = TRUE) se ## class: TreeSummarizedExperiment ## dim: 19216 26 ## metadata(0): ## assays(1): counts ## rownames(19216): 549322 522457 ... 200359 271582 ## rowData names(7): Kingdom Phylum ... Genus Species ## colnames(26): CL3 CC1 ... Even2 Even3 ## colData names(7): X.SampleID Primer ... SampleType Description ## reducedDimNames(0): ## altExpNames(1): Family ## rowLinks: a LinkDataFrame (19216 rows) ## rowTree: a phylo (19216 leaves) ## colLinks: NULL ## colTree: NULL altExp(se, &quot;Family&quot;) ## class: TreeSummarizedExperiment ## dim: 603 26 ## metadata(0): ## assays(1): counts ## rownames(603): Class::Thermoprotei Family:Sulfolobaceae ... ## Family:Thermodesulfobiaceae Phylum::SR1 ## rowData names(7): Kingdom Phylum ... Genus Species ## colnames(26): CL3 CC1 ... Even2 Even3 ## colData names(7): X.SampleID Primer ... SampleType Description ## reducedDimNames(0): ## altExpNames(0): ## rowLinks: a LinkDataFrame (603 rows) ## rowTree: a phylo (603 leaves) ## colLinks: NULL ## colTree: NULL altExp(se, &quot;Family&quot;) &lt;- relAbundanceCounts(altExp(se, &quot;Family&quot;)) assay(altExp(se, &quot;Family&quot;), &quot;relabundance&quot;)[1:5,1:7] ## CL3 CC1 SV1 M31Fcsw M11Fcsw M31Plmr M11Plmr ## Class::Thermoprotei 0.0000000 0.000e+00 0 0 0 0 0.000e+00 ## Family:Sulfolobaceae 0.0000000 0.000e+00 0 0 0 0 2.305e-06 ## Class::Sd-NA 0.0000000 0.000e+00 0 0 0 0 0.000e+00 ## Order::NRP-J 0.0001991 2.070e-04 0 0 0 0 6.914e-06 ## Family:SAGMA-X 0.0000000 6.165e-06 0 0 0 0 0.000e+00 assay(altExp(se, &quot;Family&quot;), &quot;counts&quot;)[1:5,1:7] ## CL3 CC1 SV1 M31Fcsw M11Fcsw M31Plmr M11Plmr ## Class::Thermoprotei 0 0 0 0 0 0 0 ## Family:Sulfolobaceae 0 0 0 0 0 0 1 ## Class::Sd-NA 0 0 0 0 0 0 0 ## Order::NRP-J 172 235 0 0 0 0 3 ## Family:SAGMA-X 0 7 0 0 0 0 0 These newly created data can also be kept in altExp a feature provided by SingleCellExperiment. altExpNames now consists of family level data. This can be extended to use any level present in Kingdom, Phylum, Class, Order, Family, Genus, Species. 3.2 Get unique Get which Phyla are present. head(unique(rowData(se)[,&quot;Phylum&quot;])) ## [1] &quot;Crenarchaeota&quot; &quot;Euryarchaeota&quot; &quot;Actinobacteria&quot; &quot;Spirochaetes&quot; ## [5] &quot;MVP-15&quot; &quot;Proteobacteria&quot; 3.3 Pick specific Retrieving of specific elements are required for specific analysis. For instance, extracting abundances for a specific taxa in all samples or all taxa in one sample. 3.3.1 Abundances of all taxa in specific sample taxa.abund.cc1 &lt;- getAbundanceSample(se, sample_id = &quot;CC1&quot;, abund_values = &quot;counts&quot;) taxa.abund.cc1[1:10] ## 549322 522457 951 244423 586076 246140 143239 244960 255340 144887 ## 0 0 0 0 0 0 1 0 194 5 3.3.2 Abundances of specific taxa in all samples taxa.abundances &lt;- getAbundanceFeature(se, feature_id = &quot;255340&quot;, abund_values = &quot;counts&quot;) taxa.abundances[1:10] ## CL3 CC1 SV1 M31Fcsw M11Fcsw M31Plmr M11Plmr F21Plmr M31Tong M11Tong ## 153 194 0 0 0 0 0 0 0 0 Session Info View session info R version 4.0.3 (2020-10-10) Platform: x86_64-pc-linux-gnu (64-bit) Running under: Ubuntu 20.04 LTS Matrix products: default BLAS/LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.8.so locale: [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=C [7] LC_PAPER=en_US.UTF-8 LC_NAME=C [9] LC_ADDRESS=C LC_TELEPHONE=C [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C attached base packages: [1] parallel stats4 stats graphics grDevices utils datasets [8] methods base other attached packages: [1] mia_0.0.0.9009 MicrobiomeExperiment_0.99.0.9014 [3] Biostrings_2.58.0 XVector_0.30.0 [5] TreeSummarizedExperiment_1.6.0 SingleCellExperiment_1.12.0 [7] SummarizedExperiment_1.20.0 Biobase_2.50.0 [9] GenomicRanges_1.42.0 GenomeInfoDb_1.26.1 [11] IRanges_2.24.0 S4Vectors_0.28.0 [13] BiocGenerics_0.36.0 MatrixGenerics_1.2.0 [15] matrixStats_0.57.0 BiocStyle_2.18.1 [17] rebook_1.0.0 BiocManager_1.30.10 loaded via a namespace (and not attached): [1] tidyselect_1.1.0 xfun_0.19 [3] beachmat_2.6.2 purrr_0.3.4 [5] lattice_0.20-41 vctrs_0.3.5 [7] generics_0.1.0 htmltools_0.5.0 [9] yaml_2.2.1 XML_3.99-0.5 [11] rlang_0.4.9 pillar_1.4.7 [13] scuttle_1.0.3 glue_1.4.2 [15] BiocParallel_1.24.1 CodeDepends_0.6.5 [17] GenomeInfoDbData_1.2.4 lifecycle_0.2.0 [19] stringr_1.4.0 zlibbioc_1.36.0 [21] codetools_0.2-18 evaluate_0.14 [23] knitr_1.30 callr_3.5.1 [25] ps_1.4.0 Rcpp_1.0.5 [27] DelayedArray_0.16.0 graph_1.68.0 [29] digest_0.6.27 stringi_1.5.3 [31] bookdown_0.21 processx_3.4.5 [33] dplyr_1.0.2 grid_4.0.3 [35] tools_4.0.3 bitops_1.0-6 [37] magrittr_2.0.1 RCurl_1.98-1.2 [39] tibble_3.0.4 tidyr_1.1.2 [41] pkgconfig_2.0.3 crayon_1.3.4 [43] ape_5.4-1 ellipsis_0.3.1 [45] Matrix_1.2-18 DelayedMatrixStats_1.12.1 [47] sparseMatrixStats_1.2.0 rmarkdown_2.5 [49] R6_2.5.0 nlme_3.1-150 [51] compiler_4.0.3 "],["quality-control.html", "Chapter 4 Quality Control 4.1 Get top taxa and taxonomy 4.2 Library size Session Info", " Chapter 4 Quality Control .rebook-collapse { background-color: #eee; color: #444; cursor: pointer; padding: 18px; width: 100%; border: none; text-align: left; outline: none; font-size: 15px; } .rebook-content { padding: 0 18px; display: none; overflow: hidden; background-color: #f1f1f1; } library(mia) data(&quot;GlobalPatterns&quot;) se &lt;- GlobalPatterns 4.1 Get top taxa and taxonomy 4.1.1 Features The getTopTaxa can be used for identifying top taxa in the data. top_features &lt;- getTopTaxa(se, method=&quot;median&quot;, top=10) tax_data &lt;- rowData(se)[top_features,taxonomyRanks(se)] tax_data ## DataFrame with 10 rows and 7 columns ## Kingdom Phylum Class Order ## &lt;character&gt; &lt;character&gt; &lt;character&gt; &lt;character&gt; ## 549656 Bacteria Cyanobacteria Chloroplast Stramenopiles ## 331820 Bacteria Bacteroidetes Bacteroidia Bacteroidales ## 317182 Bacteria Cyanobacteria Chloroplast Stramenopiles ## 94166 Bacteria Proteobacteria Gammaproteobacteria Pasteurellales ## 279599 Bacteria Cyanobacteria Nostocophycideae Nostocales ## 158660 Bacteria Bacteroidetes Bacteroidia Bacteroidales ## 329744 Bacteria Actinobacteria Actinobacteria Actinomycetales ## 326977 Bacteria Actinobacteria Actinobacteria Bifidobacteriales ## 248140 Bacteria Bacteroidetes Bacteroidia Bacteroidales ## 550960 Bacteria Proteobacteria Gammaproteobacteria Enterobacteriales ## Family Genus Species ## &lt;character&gt; &lt;character&gt; &lt;character&gt; ## 549656 NA NA NA ## 331820 Bacteroidaceae Bacteroides NA ## 317182 NA NA NA ## 94166 Pasteurellaceae Haemophilus Haemophilusparainflu.. ## 279599 Nostocaceae Dolichospermum NA ## 158660 Bacteroidaceae Bacteroides NA ## 329744 ACK-M1 NA NA ## 326977 Bifidobacteriaceae Bifidobacterium Bifidobacteriumadole.. ## 248140 Bacteroidaceae Bacteroides Bacteroidescaccae ## 550960 Enterobacteriaceae Providencia NA 4.2 Library size The total counts/sample can be calculated using the perCellQCMetrics/addPerCellQC from the scater package. The first one just calculates the values, whereas the latter one directly adds them to the colData. library(scater) perCellQCMetrics(se) ## DataFrame with 26 rows and 3 columns ## sum detected total ## &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; ## CL3 864077 6964 864077 ## CC1 1135457 7679 1135457 ## SV1 697509 5729 697509 ## M31Fcsw 1543451 2667 1543451 ## M11Fcsw 2076476 2574 2076476 ## ... ... ... ... ## TS28 937466 2679 937466 ## TS29 1211071 2629 1211071 ## Even1 1216137 4213 1216137 ## Even2 971073 3130 971073 ## Even3 1078241 2776 1078241 se &lt;- addPerCellQC(se) colData(se) ## DataFrame with 26 rows and 10 columns ## X.SampleID Primer Final_Barcode Barcode_truncated_plus_T ## &lt;factor&gt; &lt;factor&gt; &lt;factor&gt; &lt;factor&gt; ## CL3 CL3 ILBC_01 AACGCA TGCGTT ## CC1 CC1 ILBC_02 AACTCG CGAGTT ## SV1 SV1 ILBC_03 AACTGT ACAGTT ## M31Fcsw M31Fcsw ILBC_04 AAGAGA TCTCTT ## M11Fcsw M11Fcsw ILBC_05 AAGCTG CAGCTT ## ... ... ... ... ... ## TS28 TS28 ILBC_25 ACCAGA TCTGGT ## TS29 TS29 ILBC_26 ACCAGC GCTGGT ## Even1 Even1 ILBC_27 ACCGCA TGCGGT ## Even2 Even2 ILBC_28 ACCTCG CGAGGT ## Even3 Even3 ILBC_29 ACCTGT ACAGGT ## Barcode_full_length SampleType ## &lt;factor&gt; &lt;factor&gt; ## CL3 CTAGCGTGCGT Soil ## CC1 CATCGACGAGT Soil ## SV1 GTACGCACAGT Soil ## M31Fcsw TCGACATCTCT Feces ## M11Fcsw CGACTGCAGCT Feces ## ... ... ... ## TS28 GCATCGTCTGG Feces ## TS29 CTAGTCGCTGG Feces ## Even1 TGACTCTGCGG Mock ## Even2 TCTGATCGAGG Mock ## Even3 AGAGAGACAGG Mock ## Description sum detected ## &lt;factor&gt; &lt;numeric&gt; &lt;numeric&gt; ## CL3 Calhoun South Carolina Pine soil, pH 4.9 864077 6964 ## CC1 Cedar Creek Minnesota, grassland, pH 6.1 1135457 7679 ## SV1 Sevilleta new Mexico, desert scrub, pH 8.3 697509 5729 ## M31Fcsw M3, Day 1, fecal swab, whole body study 1543451 2667 ## M11Fcsw M1, Day 1, fecal swab, whole body study 2076476 2574 ## ... ... ... ... ## TS28 Twin #1 937466 2679 ## TS29 Twin #2 1211071 2629 ## Even1 Even1 1216137 4213 ## Even2 Even2 971073 3130 ## Even3 Even3 1078241 2776 ## total ## &lt;numeric&gt; ## CL3 864077 ## CC1 1135457 ## SV1 697509 ## M31Fcsw 1543451 ## M11Fcsw 2076476 ## ... ... ## TS28 937466 ## TS29 1211071 ## Even1 1216137 ## Even2 971073 ## Even3 1078241 The calulated library sizes can be visualized using the plotColData function. library(ggplot2) plotColData(se,&quot;sum&quot;,&quot;X.SampleID&quot;, colour_by = &quot;X.SampleID&quot;) + theme(axis.text.x = element_text(angle = 45, hjust=1)) Figure 4.1: Library sizes per sample. plotColData(se,&quot;sum&quot;,&quot;SampleType&quot;, colour_by = &quot;SampleType&quot;) + theme(axis.text.x = element_text(angle = 45, hjust=1)) Figure 4.2: Library sizes per sample type. Session Info View session info R version 4.0.3 (2020-10-10) Platform: x86_64-pc-linux-gnu (64-bit) Running under: Ubuntu 20.04 LTS Matrix products: default BLAS/LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.8.so locale: [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=C [7] LC_PAPER=en_US.UTF-8 LC_NAME=C [9] LC_ADDRESS=C LC_TELEPHONE=C [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C attached base packages: [1] parallel stats4 stats graphics grDevices utils datasets [8] methods base other attached packages: [1] scater_1.18.3 ggplot2_3.3.2 [3] mia_0.0.0.9009 MicrobiomeExperiment_0.99.0.9014 [5] Biostrings_2.58.0 XVector_0.30.0 [7] TreeSummarizedExperiment_1.6.0 SingleCellExperiment_1.12.0 [9] SummarizedExperiment_1.20.0 Biobase_2.50.0 [11] GenomicRanges_1.42.0 GenomeInfoDb_1.26.1 [13] IRanges_2.24.0 S4Vectors_0.28.0 [15] BiocGenerics_0.36.0 MatrixGenerics_1.2.0 [17] matrixStats_0.57.0 BiocStyle_2.18.1 [19] rebook_1.0.0 BiocManager_1.30.10 loaded via a namespace (and not attached): [1] viridis_0.5.1 BiocSingular_1.6.0 [3] tidyr_1.1.2 viridisLite_0.3.0 [5] DelayedMatrixStats_1.12.1 scuttle_1.0.3 [7] highr_0.8 vipor_0.4.5 [9] GenomeInfoDbData_1.2.4 yaml_2.2.1 [11] pillar_1.4.7 lattice_0.20-41 [13] glue_1.4.2 beachmat_2.6.2 [15] digest_0.6.27 colorspace_2.0-0 [17] htmltools_0.5.0 Matrix_1.2-18 [19] XML_3.99-0.5 pkgconfig_2.0.3 [21] bookdown_0.21 zlibbioc_1.36.0 [23] purrr_0.3.4 scales_1.1.1 [25] processx_3.4.5 BiocParallel_1.24.1 [27] tibble_3.0.4 farver_2.0.3 [29] generics_0.1.0 ellipsis_0.3.1 [31] withr_2.3.0 magrittr_2.0.1 [33] crayon_1.3.4 CodeDepends_0.6.5 [35] evaluate_0.14 ps_1.4.0 [37] nlme_3.1-150 beeswarm_0.2.3 [39] graph_1.68.0 tools_4.0.3 [41] lifecycle_0.2.0 stringr_1.4.0 [43] munsell_0.5.0 DelayedArray_0.16.0 [45] irlba_2.3.3 callr_3.5.1 [47] compiler_4.0.3 rsvd_1.0.3 [49] rlang_0.4.9 grid_4.0.3 [51] RCurl_1.98-1.2 BiocNeighbors_1.8.1 [53] labeling_0.4.2 bitops_1.0-6 [55] rmarkdown_2.5 gtable_0.3.0 [57] codetools_0.2-18 R6_2.5.0 [59] gridExtra_2.3 knitr_1.30 [61] dplyr_1.0.2 ape_5.4-1 [63] ggbeeswarm_0.6.0 stringi_1.5.3 [65] Rcpp_1.0.5 vctrs_0.3.5 [67] tidyselect_1.1.0 xfun_0.19 [69] sparseMatrixStats_1.2.0 "],["microbiome-exploration.html", "Chapter 5 Microbiome Exploration 5.1 Prevalence Session Info", " Chapter 5 Microbiome Exploration .rebook-collapse { background-color: #eee; color: #444; cursor: pointer; padding: 18px; width: 100%; border: none; text-align: left; outline: none; font-size: 15px; } .rebook-content { padding: 0 18px; display: none; overflow: hidden; background-color: #f1f1f1; } This chapter focuses on the exploration of microbiome data and establish commonly used descriptors of a microbiome. The main difference to quality control is that the exploration assumes the technical aspects of the dataset have been investigated to your satisfaction. Generally speaking at this point you should be quite certain, that the dataset doesnâ€™t suffer from severe technical biases or you should at least be aware of potential problems. In reality you might need to go back and forth between QC and exploration, since you discover through exploration of your dataset technical aspects you need to check. library(mia) data(&quot;GlobalPatterns&quot;) se &lt;- GlobalPatterns 5.1 Prevalence Prevalence is a measurements, which describes in how many samples certain microbes were detected. Investigating the prevalence of microbes allows you either to focus on changes, which pertain to most of the samples, or to focus on less often found microbes, which are nonetheless abundantly found in a small number of samples. Population prevalence (frequency) at a 1% relative abundance threshold: head(getPrevalence(se, detection = 1/100, sort = TRUE, as_relative = TRUE)) ## 331820 158660 98605 326977 145149 114821 ## 0.2308 0.2308 0.1923 0.1923 0.1538 0.1538 Population prevalence (frequency) at the absolute abundance threshold at read count 1: head(getPrevalence(se, detection = 1, sort = TRUE, abund_values = &quot;counts&quot;, as_relative = FALSE)) ## 145149 114821 108747 526804 98605 180658 ## 1 1 1 1 1 1 5.1.1 Prevalent microbiota analysis If you only need the names of the prevalent taxa, do as follows. This returns the taxa that exceed the given prevalence and detection thresholds. prev &lt;- getPrevalentTaxa(se, detection = 0, prevalence = 50/100) See also related functions for the analysis of rare and variable taxa (rareMembers; rareAbundance; lowAbundance). 5.1.2 Plotting prevalence TODO Session Info View session info R version 4.0.3 (2020-10-10) Platform: x86_64-pc-linux-gnu (64-bit) Running under: Ubuntu 20.04 LTS Matrix products: default BLAS/LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.8.so locale: [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=C [7] LC_PAPER=en_US.UTF-8 LC_NAME=C [9] LC_ADDRESS=C LC_TELEPHONE=C [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C attached base packages: [1] parallel stats4 stats graphics grDevices utils datasets [8] methods base other attached packages: [1] mia_0.0.0.9009 MicrobiomeExperiment_0.99.0.9014 [3] Biostrings_2.58.0 XVector_0.30.0 [5] TreeSummarizedExperiment_1.6.0 SingleCellExperiment_1.12.0 [7] SummarizedExperiment_1.20.0 Biobase_2.50.0 [9] GenomicRanges_1.42.0 GenomeInfoDb_1.26.1 [11] IRanges_2.24.0 S4Vectors_0.28.0 [13] BiocGenerics_0.36.0 MatrixGenerics_1.2.0 [15] matrixStats_0.57.0 BiocStyle_2.18.1 [17] rebook_1.0.0 BiocManager_1.30.10 loaded via a namespace (and not attached): [1] tidyselect_1.1.0 xfun_0.19 [3] beachmat_2.6.2 purrr_0.3.4 [5] lattice_0.20-41 vctrs_0.3.5 [7] generics_0.1.0 htmltools_0.5.0 [9] yaml_2.2.1 XML_3.99-0.5 [11] rlang_0.4.9 pillar_1.4.7 [13] scuttle_1.0.3 glue_1.4.2 [15] BiocParallel_1.24.1 CodeDepends_0.6.5 [17] GenomeInfoDbData_1.2.4 lifecycle_0.2.0 [19] stringr_1.4.0 zlibbioc_1.36.0 [21] codetools_0.2-18 evaluate_0.14 [23] knitr_1.30 callr_3.5.1 [25] ps_1.4.0 Rcpp_1.0.5 [27] DelayedArray_0.16.0 graph_1.68.0 [29] digest_0.6.27 stringi_1.5.3 [31] bookdown_0.21 processx_3.4.5 [33] dplyr_1.0.2 grid_4.0.3 [35] tools_4.0.3 bitops_1.0-6 [37] magrittr_2.0.1 RCurl_1.98-1.2 [39] tibble_3.0.4 tidyr_1.1.2 [41] pkgconfig_2.0.3 crayon_1.3.4 [43] ape_5.4-1 ellipsis_0.3.1 [45] Matrix_1.2-18 DelayedMatrixStats_1.12.1 [47] sparseMatrixStats_1.2.0 rmarkdown_2.5 [49] R6_2.5.0 nlme_3.1-150 [51] compiler_4.0.3 "],["example-data.html", "Chapter 6 Example data 6.1 Package data Session Info", " Chapter 6 Example data .rebook-collapse { background-color: #eee; color: #444; cursor: pointer; padding: 18px; width: 100%; border: none; text-align: left; outline: none; font-size: 15px; } .rebook-content { padding: 0 18px; display: none; overflow: hidden; background-color: #f1f1f1; } 6.1 Package data The datasets in mia are conversions of the phyloseq datasets GlobalPatterns enterotype, esophagus and soilrep. 6.1.1 GlobalPatterns library(mia) # Example how to load data data(&quot;GlobalPatterns&quot;) GlobalPatterns ## class: TreeSummarizedExperiment ## dim: 19216 26 ## metadata(0): ## assays(1): counts ## rownames(19216): 549322 522457 ... 200359 271582 ## rowData names(7): Kingdom Phylum ... Genus Species ## colnames(26): CL3 CC1 ... Even2 Even3 ## colData names(7): X.SampleID Primer ... SampleType Description ## reducedDimNames(0): ## altExpNames(0): ## rowLinks: a LinkDataFrame (19216 rows) ## rowTree: a phylo (19216 leaves) ## colLinks: NULL ## colTree: NULL 6.1.2 Enterotype 6.1.3 Esophagus 6.1.4 Soilrep Session Info View session info R version 4.0.3 (2020-10-10) Platform: x86_64-pc-linux-gnu (64-bit) Running under: Ubuntu 20.04 LTS Matrix products: default BLAS/LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.8.so locale: [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=C [7] LC_PAPER=en_US.UTF-8 LC_NAME=C [9] LC_ADDRESS=C LC_TELEPHONE=C [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C attached base packages: [1] parallel stats4 stats graphics grDevices utils datasets [8] methods base other attached packages: [1] mia_0.0.0.9009 MicrobiomeExperiment_0.99.0.9014 [3] Biostrings_2.58.0 XVector_0.30.0 [5] TreeSummarizedExperiment_1.6.0 SingleCellExperiment_1.12.0 [7] SummarizedExperiment_1.20.0 Biobase_2.50.0 [9] GenomicRanges_1.42.0 GenomeInfoDb_1.26.1 [11] IRanges_2.24.0 S4Vectors_0.28.0 [13] BiocGenerics_0.36.0 MatrixGenerics_1.2.0 [15] matrixStats_0.57.0 BiocStyle_2.18.1 [17] rebook_1.0.0 BiocManager_1.30.10 loaded via a namespace (and not attached): [1] tidyselect_1.1.0 xfun_0.19 [3] beachmat_2.6.2 purrr_0.3.4 [5] lattice_0.20-41 vctrs_0.3.5 [7] generics_0.1.0 htmltools_0.5.0 [9] yaml_2.2.1 XML_3.99-0.5 [11] rlang_0.4.9 pillar_1.4.7 [13] scuttle_1.0.3 glue_1.4.2 [15] BiocParallel_1.24.1 CodeDepends_0.6.5 [17] GenomeInfoDbData_1.2.4 lifecycle_0.2.0 [19] stringr_1.4.0 zlibbioc_1.36.0 [21] codetools_0.2-18 evaluate_0.14 [23] knitr_1.30 callr_3.5.1 [25] ps_1.4.0 Rcpp_1.0.5 [27] DelayedArray_0.16.0 graph_1.68.0 [29] digest_0.6.27 stringi_1.5.3 [31] bookdown_0.21 processx_3.4.5 [33] dplyr_1.0.2 grid_4.0.3 [35] tools_4.0.3 bitops_1.0-6 [37] magrittr_2.0.1 RCurl_1.98-1.2 [39] tibble_3.0.4 tidyr_1.1.2 [41] pkgconfig_2.0.3 crayon_1.3.4 [43] ape_5.4-1 ellipsis_0.3.1 [45] Matrix_1.2-18 DelayedMatrixStats_1.12.1 [47] sparseMatrixStats_1.2.0 rmarkdown_2.5 [49] R6_2.5.0 nlme_3.1-150 [51] compiler_4.0.3 "],["bibliography.html", "Bibliography", " Bibliography "]]
